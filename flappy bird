import pygame
import random
pygame.init()
clock = pygame.time.Clock()

FPS = 60

HEIGHT = 600
screen = pygame.display.set_mode()

pygame.display.set_caption("Flappy Bird")
FONT = pygame.font.SysFont('Bauhaus 93',60)
WHITE = (255,255,255)


# game variables

GROUND_SCROLL = 0
SCROLL_SPEED = 5
FLYING = False  
GAME_OVER = False  
PIPE_FREQUENCY = 1500
PIPE_GAP = 150
LAST_PIPE = pygame.time.get_ticks() - PIPE_FREQUENCY
PASS_PIPE = False
SCORE = 0


#load images
bg = pygame.display.load("FlappyBird.py\img\\bg.png")
ground_img =  pygame.display.load("FlappyBird.py\img\ground.png")
button_img = pygame.display.load("FlappyBird.py\img/restart.png")

def draw_text(text,font,text_col,x ,y):
    screen.blit(font.render(text, True, text_col), (x,y))

def reset_game():
    pipe_group.empty()
    flappy.rect.center = (100, HEIGHT // 2)
    global PASS_PIPE, SCORE
    SCORE = 0
    PASS_PIPE = False
    return SCORE

class Bird(pygame.sprite.Sprite):
    def __init__(self,x,y):
        pygame.sprite.Sprite.__init__(self)
        self.images = [pygame.image.load(f'FlappyBird.py\img/bird{i}.png')for i in range(1,4)] # load all bird img
        self.index = 0 # current img index
        self.counter = 0
        self.image = self.images[self.index]
        self.rect = self.image.get_rect(center=(x,y))
        self.rect.center = [x,y]
        self.vel = 0 # vertical velocity of the bird ,initially 0
        self.clicked = False
    
    def update(self):
        if FLYING:
            self.vel = min(self.vel + 0.5,8)  
        self.rect.y += int(self.vel)
        if not GAME_OVER:
            if pygame.mouse.get_pressed()[0] and not self.clicked:
                self.clicked = True
                self.vel = -10
            if not pygame.mouse.get_pressed()[0]:
                self.clicked = False
            self.counter += 1
            if self.counter >5:
                self.counter = 0
                self.index = (self.index + 1) % len(self.images)
            self.image = pygame.transfor.rotate(self.images[self.index], self.vel * -2)
        else:
            self.image = pygame.transform.rotate(self.images[self.index], -90)

class Pipe(pygame.sprite.Sprite):
    def __init__(self,x,y,pos):
         pygame.sprite.Sprite.__init__(self)
         self.image = pygame.image.load('FlappyBird.py\img\pipe.png')
         if pos == 1:
             self.image = pygame.transform.flip(self.image, False, True)
             self.rect = self.image.get_rect(bottomleft = (x,y - PIPE_GAP // 2))
         else:
             self.rect = self.image.get_rect(topleft=(x,y + PIPE_GAP // 2))
    
    def update(self):  
        self.rect.x -= SCROLL_SPEED
        if self.rect.right < 0:
            self.kill() 





    #---- Sprite Group---  
bird_group = pygame.sprite.Group()
# pipe_group = pygame.sprite.Group()

# -- creating object---
flappy = Bird(100, HEIGHT//2 )
bird_group.add(flappy)


#Game loop

clock = pygame.time.Clock()
running = True
while running:
    clock.tick(FPS)
    screen.blit(bg,(0,0))
    if not GAME_OVER and FLYING:
        time_now = pygame.time.get_ticks()
    #-------------------
    bird_group.update()
    bird_group.draw(screen)
    #pipe_group.draw(screen)
    draw_text(str(SCORE),FONT, WHITE,400,100)
    
    for event in event.pygame.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.MOUSEBUTTONDOWN and not FLYING and not GAME_OVER:
            FLYING = True
    pygame.display.update()

pygame.quit()
    
      
